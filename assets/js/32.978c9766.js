(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{440:function(s,a,t){s.exports=t.p+"assets/img/case-when.1732e120.png"},573:function(s,a,t){"use strict";t.r(a);var n=t(19),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"shell脚本学习"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#shell脚本学习"}},[s._v("#")]),s._v(" shell脚本学习")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("echo -e 不显示转义的字符")])]),s._v(" "),n("li",[n("p",[s._v("shell传递参数实例")])])]),s._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##!/bin/bash")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## author:菜鸟教程")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## url:www.runoob.com")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Shell 传递参数实例！"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"执行的文件名：'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v('"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"第一个参数为：'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"第二个参数为：'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v('"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"第三个参数为：'),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v('"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x test.sh \n$ ./test.sh "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\nShell 传递参数实例！\n执行的文件名：./test.sh\n第一个参数为：1\n第二个参数为：2\n第三个参数为：3\n")])])]),n("ul",[n("li",[n("p",[s._v("$* 与 $@ 区别："),n("br"),s._v("\n相同点：都是引用所有参数。"),n("br"),s._v('\n不同点：只有在双引号中体现出来。假设在脚本运行时写了三个参数 1、2、3，，则 " * " 等价于 "1 2 3"（传递了一个参数），而 "@" 等价于 "1" "2" "3"（传递了三个参数）。')])]),s._v(" "),n("li",[n("p",[s._v("运算符"),n("br"),s._v("\neq：equal to。"),n("br"),s._v("\nne：not equal to。"),n("br"),s._v("\ngt：greater than。"),n("br"),s._v("\nge：greater than or equal to。"),n("br"),s._v("\nlt：less than。"),n("br"),s._v("\nle：less than or equal to。")])]),s._v(" "),n("li",[n("p",[s._v("shell脚本还是有点意思，可以方便地传变量")])]),s._v(" "),n("li",[n("p",[s._v("shell里如果是赋值那么算式那么等号两边不能有空格"),n("br"),s._v("\n而如果是进行比较等算式，则必须要有空格在两边")])]),s._v(" "),n("li",[n("p",[s._v("shell语句中的case when 用法"),n("br"),s._v(" "),n("img",{staticClass:"lazy",attrs:{alt:"shell 中的case when","data-src":t(440),loading:"lazy"}})])]),s._v(" "),n("li",[n("p",[s._v("shell脚本求解一元二次方程"),n("br"),s._v("\n不熟悉的东西，坑也是众多")])])]),s._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##!/bin/bash")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" nums\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n   "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("array")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$nums")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${array"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("b")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${array"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("c")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${array"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## echo $a;echo $b;echo $c;")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("tmp")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("scale")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sqrt('),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v("*"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v("-4*"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v("*"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$c")]),s._v(')"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bc")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##echo $tmp;")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('##echo "scale=2;$b+$tmp"|bc')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("x1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(' "scale'),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("$b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("+$tmp"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("*"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"|bc)\nx2='),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(' "scale'),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("$b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("-$tmp"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("/(2*"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(')"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"x1='),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$x1")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"x2='),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$x2")]),s._v('"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);