(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{532:function(a,s,t){"use strict";t.r(s);var n=t(19),r=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[a._v("#")]),a._v(" 前言")]),a._v(" "),t("p",[t("strong",[a._v("FROM：指定一个镜像，必须为第一个命令")])]),a._v(" "),t("p",[a._v("FROM指令是最重要的一个且必须为 "),t("code",[a._v("DockerFile")]),a._v(" 文件开篇的第一个非注释行，用于为映像文件构建过程指定基准镜像，后续的指令运行于此基准镜像所提供的运行环境。")]),a._v(" "),t("p",[a._v("实践中，基准镜像可以是任何可用镜像文件，默认情况下，"),t("code",[a._v("docker build")]),a._v(" 会在 "),t("code",[a._v("docker")]),a._v(" 主机上查找指定的镜像文件，在其不存在时，则会从 "),t("code",[a._v("docker Hub Registry")]),a._v(" 上拉取所需的镜像文件")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("格式：\n　　FROM "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("image"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n　　FROM "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("image"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(":"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("tag"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n　　FROM "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("image"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("@"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("digest"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n示例：\n　　FROM mysql:5.6\n注：\n　　tag或digest是可选的，如果不使用这两个值时，会使用latest版本的基础镜像\n")])])]),t("h5",{attrs:{id:"maintainer-维护者信息-还可以使用-label-指定各种元格式指定-maintainer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#maintainer-维护者信息-还可以使用-label-指定各种元格式指定-maintainer"}},[a._v("#")]),a._v(" **MAINTAINER：**维护者信息，还可以使用 "),t("code",[a._v("LABEL")]),a._v(" 指定各种元格式指定 "),t("code",[a._v("maintainer")])]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("格式：\n    MAINTAINER "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n示例：\n    MAINTAINER Jasper Xu\n    MAINTAINER sorex@163.com\n    MAINTAINER Jasper Xu "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("sorex@163.com"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("h5",{attrs:{id:"copy-功能类似add-但是是不会自动解压文件-也不能访问网络资源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#copy-功能类似add-但是是不会自动解压文件-也不能访问网络资源"}},[a._v("#")]),a._v(" "),t("strong",[a._v("COPY")]),a._v("：功能类似ADD，但是是不会自动解压文件，也不能访问网络资源")]),a._v(" "),t("p",[a._v("用于从 "),t("strong",[a._v("Docker")]),a._v(" 主机复制文件至创建的新映像文件")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("格式：\n    COPY "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("src"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(". "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("dest"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n    COPY "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"<src>"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(". "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"<dest>"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" 用于支持包含空格的路径\n     "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("src"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(":要复制的源文件或目录，支持使用通配符\n     "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("dest"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("：目标路径，即正在创建的image的文件系统路径；建议为"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("dest"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("使用绝对路径，否则，COPY指定则以WORKDIR为其起始路径；\n      注意：在路径中有空白字符时，通常使用第二种格式\n文件复制准则\n "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("src"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("必须是build上下文中的路径，不能是其父目录中的文件\n 如果"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("src"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("是目录，则其内部文件或子目录会被递归复制，但"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("src"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("目录自身不会被复制\n 如果指定了多个"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("src"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("，或在"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("src"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("中使用了通配符，则"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("dest"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("必须是一个目录，且必须以/结尾\n 如果"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("dest"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("事先不存在，他将会被自动创建，这包括其父目录路径\n")])])]),t("h5",{attrs:{id:"add-将本地文件添加到容器中-tar-类型文件会自动解压-网络压缩资源不会被解压-可以访问网络资源-类似-wget"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#add-将本地文件添加到容器中-tar-类型文件会自动解压-网络压缩资源不会被解压-可以访问网络资源-类似-wget"}},[a._v("#")]),a._v(" **ADD：**将本地文件添加到容器中，"),t("strong",[a._v("tar")]),a._v(" 类型文件会自动解压(网络压缩资源不会被解压)，可以访问网络资源，类似 "),t("strong",[a._v("wget")])]),a._v(" "),t("h5",{attrs:{id:"workdir-工作目录-类似于cd-命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#workdir-工作目录-类似于cd-命令"}},[a._v("#")]),a._v(" "),t("strong",[a._v("WORKDIR："),t("strong",[a._v("工作目录，类似于")]),a._v("cd")]),a._v(" 命令")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("格式：\n    WORKDIR /path/to/workdir\n示例：\n    WORKDIR /a  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("这时工作目录为/a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    WORKDIR b  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("这时工作目录为/a/b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    WORKDIR c  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("这时工作目录为/a/b/c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n注：\n　　通过WORKDIR设置工作目录后，Dockerfile中其后的命令RUN、CMD、ENTRYPOINT、ADD、COPY等命令都会在该目录下执行。在使用docker run运行容器时，可以通过-w参数覆盖构建时所设置的工作目录。\n")])])]),t("h5",{attrs:{id:"volume-用于指定持久化目录-指定卷-注意在-dockerfile-中只能指定基于-docker-管理的卷"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#volume-用于指定持久化目录-指定卷-注意在-dockerfile-中只能指定基于-docker-管理的卷"}},[a._v("#")]),a._v(" **VOLUME：**用于指定持久化目录（指定卷，注意在 "),t("code",[a._v("dockerfile")]),a._v(" 中只能指定基于 "),t("code",[a._v("docker")]),a._v(" 管理的卷）")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("格式：\n    VOLUME "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/path/to/dir"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n示例：\n    VOLUME "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/data"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n    VOLUME "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/var/www"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/var/log/apache2"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/etc/apache2"')]),a._v("\n注：\n　　一个卷可以存在于一个或多个容器的指定目录，该目录可以绕过联合文件系统，并具有以下功能：\n卷可以容器间共享和重用\n容器并不一定要和其它容器共享卷\n修改卷后会立即生效\n对卷的修改不会对镜像产生影响\n卷会一直存在，直到没有任何容器在使用它\n")])])]),t("h5",{attrs:{id:"expose-用于为容器打开指定要监听的端口以实现与外部通信"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#expose-用于为容器打开指定要监听的端口以实现与外部通信"}},[a._v("#")]),a._v(" **EXPOSE：**用于为容器打开指定要监听的端口以实现与外部通信")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("格式：\n    EXPOSE "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("port"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("port"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n示例：\n    EXPOSE "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("443")]),a._v("\n    EXPOSE "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v("\n    EXPOSE "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("11211")]),a._v("/tcp "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("11211")]),a._v("/udp\n注：\n　　EXPOSE并不会让容器的端口访问到主机。要使其可访问，需要在docker run运行容器时通过-p来发布这些端口，或通过-P参数来发布EXPOSE导出的所有端口\n　　镜像中指定的是待暴露的端口是隐藏的，需要加上大写的-P选项，也可以自定义\n")])])]),t("h5",{attrs:{id:"env-设置环境变量-用于为镜像定义所需的环境变量-并可被-dockerfile-文件中位于其后的其他指令所调用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#env-设置环境变量-用于为镜像定义所需的环境变量-并可被-dockerfile-文件中位于其后的其他指令所调用"}},[a._v("#")]),a._v(" **ENV：**设置环境变量，用于为镜像定义所需的环境变量，并可被 "),t("code",[a._v("DockerFile")]),a._v(" 文件中位于其后的其他指令所调用")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("格式：\n    ENV "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("key"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("value"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("##<key>之后的所有内容均会被视为其<value>的组成部分，因此，一次只能设置一个变量")]),a._v("\n    ENV "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("key"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("value"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('##可以设置多个变量，每个变量为一个"<key>=<value>"的键值对，如果<key>中包含空格，可以使用\\来进行转义，也可以通过""来进行标示；另外，反斜线也可以用于续行')]),a._v("\n示例：\n    ENV myName John Doe\n    ENV myDog Rex The Dog\n    ENV "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("myCat")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("fluffy\n")])])]),t("h5",{attrs:{id:"run-构建镜像时执行的命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#run-构建镜像时执行的命令"}},[a._v("#")]),a._v(" **RUN：**构建镜像时执行的命令")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("RUN用于在镜像容器中执行命令，其有以下两种命令执行方式：\nshell执行\n格式：\n    RUN "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("command"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\nexec执行\n格式：\n    RUN "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"executable"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"param1"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"param2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n示例：\n    RUN "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"executable"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"param1"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"param2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n    RUN apk update\n    RUN "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/etc/execfile"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"arg1"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"arg1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n注：\n　　RUN指令创建的中间镜像会被缓存，并会在下次构建中使用。如果不想使用这些缓存镜像，可以在构建时指定--no-cache参数，如：docker build --no-cache\n　　基于基础镜像执行，在操作时评估好基础镜像的能力\n　　注意：json数组中，要使用双引号\n")])])]),t("h5",{attrs:{id:"cmd-构建容器后调用-也就是在容器启动时才进行调用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cmd-构建容器后调用-也就是在容器启动时才进行调用"}},[a._v("#")]),a._v(" **CMD：**构建容器后调用，也就是在容器启动时才进行调用")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("格式：\n    CMD "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"executable"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"param1"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"param2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("执行可执行文件，优先"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    CMD "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"param1"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"param2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("设置了ENTRYPOINT，则直接调用ENTRYPOINT添加参数"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    CMD "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v(" param1 param2 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("执行shell内部命令"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n示例：\n    CMD "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"This is a test."')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wc")]),a._v(" -\n    CMD "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/usr/bin/wc"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"--help"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n注：\n 　　CMD不同于RUN，CMD用于指定在容器启动时所要执行的命令，而RUN用于指定镜像构建时所要执行的命令。\n")])])]),t("h5",{attrs:{id:"entrypoint-配置容器-使其可执行化。配合cmd可省去-application-只使用参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#entrypoint-配置容器-使其可执行化。配合cmd可省去-application-只使用参数"}},[a._v("#")]),a._v(' **ENTRYPOINT：**配置容器，使其可执行化。配合CMD可省去"application"，只使用参数')]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("格式：\n    ENTRYPOINT "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"executable"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"param1"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"param2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("可执行文件, 优先"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    ENTRYPOINT "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("command")]),a._v(" param1 param2 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("shell内部命令"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n示例：\n    FROM ubuntu\n    ENTRYPOINT "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"top"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-b"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n    CMD "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-c"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n注：\n　　　ENTRYPOINT与CMD非常类似，不同的是通过docker run执行的命令不会覆盖ENTRYPOINT，而docker run命令中指定的任何参数，都会被当做参数再次传递给ENTRYPOINT。Dockerfile中只允许有一个ENTRYPOINT命令，多指定时会覆盖前面的设置，而只执行最后的ENTRYPOINT指令。\n")])])]),t("h5",{attrs:{id:"user-指定运行容器时的用户名或-uid-后续的-run-也会使用指定用户。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#user-指定运行容器时的用户名或-uid-后续的-run-也会使用指定用户。"}},[a._v("#")]),a._v(" **USER：**指定运行容器时的用户名或 UID，后续的 RUN 也会使用指定用户。")]),a._v(" "),t("p",[a._v("使用USER指定用户时，可以使用用户名、UID或GID，或是两者的组合。当服务不需要管理员权限时，可以通过该命令指定运行用户。并且可以在之前创建所需要的用户")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("格式:\n　　"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("USER")]),a._v(" user\n　　"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("USER")]),a._v(" user:group\n　　"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("USER")]),a._v(" uid\n　　"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("USER")]),a._v(" uid:gid\n　　"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("USER")]),a._v(" user:gid\n　　"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("USER")]),a._v(" uid:group\n 示例：\n    　　"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("USER")]),a._v(" www\n 注：\n　　使用"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("USER")]),a._v("指定用户后，Dockerfile中其后的命令RUN、CMD、ENTRYPOINT都将使用该用户。镜像构建完成后，通过docker run运行容器时，可以通过-u参数来覆盖所指定的用户。\n")])])]),t("h5",{attrs:{id:"healthcheck-健康检查"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#healthcheck-健康检查"}},[a._v("#")]),a._v(" **HEALTHCHECK：**健康检查")]),a._v(" "),t("h5",{attrs:{id:"arg-用于指定传递给构建运行时的变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arg-用于指定传递给构建运行时的变量"}},[a._v("#")]),a._v(" **ARG：**用于指定传递给构建运行时的变量")])])}),[],!1,null,null,null);s.default=r.exports}}]);